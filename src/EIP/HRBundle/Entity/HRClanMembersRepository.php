<?php

namespace EIP\HRBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HRClanMembersRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HRClanMembersRepository extends EntityRepository
{
    public function hasClan($userId, $idGame) {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('m, c')
                ->from('EIPHRBundle:HRClanMembers',  'm')
                ->leftJoin('EIPHRBundle:HRClan', 'c', 'WITH', 'c.id = m.idClan')
                ->where('m.idUser = :userid AND c.idGame = :gameid')
                ->setParameter(':userid', $userId)->setParameter(':gameid', $idGame);
        $res = $qb->getQuery()->getResult();

        if (!empty($res))
            return true;
        return false;
    }
     
    public function userCanFireMember($userId, $idClan) {
          $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND r.CanFireMember = 1 AND m.idClan = :clanid")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;    
    }
    
    public function userCanCreateRank($userId, $idClan) {
            $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND r.CanCreateRank = 1 AND m.idClan = :clanid")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;   
    }
    
    public function userCanRecruit($userId, $idClan) {
            $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND r.CanAcceptNewMember = 1 AND m.idClan = :clanid")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;  
    }
    
    public function userCanEditText($userId, $idClan) {
            $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND r.CanEditText = 1 AND m.idClan = :clanid")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;   
    }
    
    public function userCanAccessToAdmin($userId, $idClan) {
            $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND m.idClan = :clanid AND (r.CanEditText = 1 OR r.CanAcceptNewMember = 1 OR r.CanCreateRank = 1 OR r.CanFireMember = 1)")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;   
    }
    
    public function userCanDeleteClan($userId, $idClan) {
            $qb = $this->getEntityManager()->createQueryBuilder()
                  ->select("m")
                  ->from("EIPHRBundle:HRClanMembers", "m")
                  ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                  ->where("m.idUser = :userid AND r.canDeleteClan = 1 AND m.idClan = :clanid")
                  ->setParameter(':userid', $userId)->setParameter(':clanid', $idClan);
          $res = $qb->getQuery()->getResult();
          if (!empty($res))
              return true;
          return false;   
    }
    
    public function getOneLine($userId, $idGame) {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('m')
                ->from('EIPHRBundle:HRClanMembers', 'm')
                ->leftJoin("EIPHRBundle:HRClan", "c", "WITH", "c.id = m.idClan")
                ->where('m.idUser = :userid AND c.idGame = :gameid')
                ->setParameter(":userid", $userId)->setParameter(':gameid', $idGame);
        return $qb->getQuery()->getResult();
    }
    
    public function getLineWithThisRank($rankId) {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('m')
                ->from('EIPHRBundle:HRClanMembers', 'm')
                ->where('m.idRank = :rankid')->setParameter(":rankid", $rankId);
        return $qb->getQuery()->getResult();   
    }
}
