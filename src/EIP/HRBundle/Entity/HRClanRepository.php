<?php

namespace EIP\HRBundle\Entity;

use Doctrine\ORM\EntityRepository;
use EIP\HRBundle\Entity\HRClan;

/**
 * HRClanRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HRClanRepository extends EntityRepository
{
    public function getClansList($idGame) {
        return  $this->getEntityManager()
                ->createQuery("SELECT c FROM EIPHRBundle:HRClan c WHERE c.idGame = :idgame ORDER BY c.name ASC")
                ->setParameter(':idgame', $idGame)
                ->getResult();
    }

    public function getAllClan($idGame){

        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('c.id as id, c.acronym as acronym, c.name as name, count(c.name) as nmMember')
                ->from("EIPHRBundle:HRClan", "c")
                ->leftJoin("EIPHRBundle:HRClanMembers", "m", "WITH", "m.idClan = c.id")
                ->groupBy("c.id")
                ->where('c.idGame = :idgame')->setParameter(':idgame', $idGame);

        $res = $qb->getQuery()->getResult();
        for ($i = 0; $i < count($res); $i++){
            $res[$i]['url'] = str_replace(' ', '_', strtolower($res[$i]['name']));
        }

        return $res;

    }


    public function getUserClan($userId, $gameId) {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('c.id as id, c.name as name, c.acronym as acronym, c.banner as banner, c.publicPresentation as publicPresentation, c.privatePresentation as privatePresentation, count(c.name) as nmMember')
                ->from("EIPHRBundle:HRClan", "c")
                ->leftJoin("EIPHRBundle:HRClanMembers", "m", "WITH", "m.idClan = c.id")
                ->groupBy("c.id")->where("m.idUser = :userid AND c.idGame = :gameid")
                ->setParameter(':userid', $userId)->setParameter(':gameid', $gameId);
        $res = $qb->getQuery()->getResult();
        $res[0]['url'] = str_replace(' ', '_', strtolower($res[0]['name']));
        return $res[0];
    }

    public function getUserClanById($idClan) {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('c')
                ->from('EIPHRBundle:HRClan', 'c')
                ->where('c.id = :idclan')
                ->setParameter(':idclan', $idClan);
        $res = $qb->getQuery()->getResult();
        return $res[0];
    }


    public function getInfoClan($name, $idGame){
        $name = str_replace('_', ' ', $name);
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('c')->from('EIPHRBundle:HRClan', 'c')
                ->where("lower(c.name) = :name AND c.idGame = :idgame")
                ->setParameter(':name', $name)->setParameter(':idgame', $idGame);
        $res = $qb->getQuery()->getResult();
        return $res;
    }

    public function getAllMember($clan){
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('u.id as uid, u.username as uname,  r.name as rname,m.idClan as midc, m.idUser as midu, m.idRank as midr, r.CanFireMember as rcfm, r.name as rankName')
                ->from("EIPHRBundle:HRClanMembers", "m")
                ->leftJoin("EIPHRBundle:HRUser", "u", "WITH", "u.id = m.idUser")
                ->leftJoin("EIPHRBundle:HRClanRank", "r", "WITH", "r.id = m.idRank")
                ->groupBy("m.id")->where("m.idClan = :clanid")->setParameter(':clanid', $clan);
        $res = $qb->getQuery()->getResult();
        return $res;
    }

    public function getMembersLine($idClan){
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select('m')
                ->from("EIPHRBundle:HRClanMembers", "m")
                ->where("m.idClan = :clanid")->setParameter(':clanid', $idClan);
        $res = $qb->getQuery()->getResult();
        return $res;
    }

    public function getUserClanByGame(HRUser $user, HRGame $game)
    {
        return $this->getEntityManager()->createQuery("
                SELECT c
                FROM EIPHRBundle:HRClan c
                JOIN EIPHRBundle:HRClanMembers m
                WITH m.idClan = c.id
                WHERE c.idGame = :gameid
                AND m.idUser = :userid
            ")
                ->setParameter(':gameid', $game->getId())
                ->setParameter(':userid', $user->getId())
                ->getOneOrNullResult();
    }

    public function getClansForUsers(array $inArray, $gameid) {
        $data = $this->_em->createQuery("
            SELECT c.name AS clanname, u.id AS userid
            FROM EIPHRBundle:HRClan c
            LEFT JOIN EIPHRBundle:HRClanMembers m
                WITH m.idClan = c.id
            LEFT JOIN EIPHRBundle:HRUser u
                WITH u.id = m.idUser
            WHERE c.idGame = :gameid
            AND m.idUser IN ( :inArray )
        ")
            ->setParameters(array(
                ':gameid' => $gameid,
                ':inArray' => $inArray
            ))
            ->getArrayResult();

        $result = array();
        foreach ($data as $d) {
            $result[$d['userid']] = $d['clanname'];
        }
        return $result;
    }

}
